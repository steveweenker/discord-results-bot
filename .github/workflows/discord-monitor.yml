name: Discord Results Monitor Bot

on:
  schedule:
    # Runs every 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      check_interval:
        description: 'Check interval in seconds'
        required: false
        default: '30'
        type: string

jobs:
  monitor-results:
    runs-on: ubuntu-latest
    timeout-minutes: 55  # Stop after 55 minutes (GitHub limit 60)

    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 📋 Validate Setup
        run: |
          echo "🔍 Validating configuration..."
          if [ ! -f "registration_numbers.txt" ]; then
            echo "❌ registration_numbers.txt not found!"
            exit 1
          fi
          reg_count=$(grep -c "^[0-9]\{11\}$" registration_numbers.txt || true)
          echo "📊 Found $reg_count valid registration numbers"
          if [ $reg_count -eq 0 ]; then
            echo "⚠️ No valid 11-digit registration numbers found!"
            exit 1
          fi
          echo "✅ Configuration validated successfully"

      - name: 🔍 Run Discord Results Monitor
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          CHECK_INTERVAL: ${{ github.event.inputs.check_interval || '30' }}
          PYTHONUNBUFFERED: 1
        run: |
          echo "🎯 Starting Discord Results Monitor Bot..."
          echo "⏱️ Check interval: ${CHECK_INTERVAL} seconds"
          echo "🕐 Maximum runtime: 55 minutes"
          echo "📅 Started at: $(date '+%Y-%m-%d %H:%M:%S UTC')"
          if [ -z "$DISCORD_WEBHOOK" ]; then
            echo "❌ DISCORD_WEBHOOK secret is not set!"
            exit 1
          fi
          timeout 3300 python discord_bot.py || exit_code=$?
          case ${exit_code:-0} in
            0)
              echo "✅ Bot completed successfully"
              ;;
            124)
              echo "⏰ Job reached timeout limit"
              echo "🔄 Next scheduled run will continue monitoring"
              ;;
            *)
              echo "❌ Bot exited with error code: ${exit_code:-0}"
              exit ${exit_code:-0}
              ;;
          esac

      - name: 📊 Generate Job Summary
        if: always()
        run: |
          echo "# 📊 Discord Results Monitor - Job Summary" >> $GITHUB_STEP_SUMMARY
          echo "## 📈 Execution Details" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🕐 Started At | $(date -u -d '55 minutes ago' '+%Y-%m-%d %H:%M:%S UTC' 2>/dev/null || date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏁 Finished At | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
          echo "| 🐍 Python Version | $(python --version) |" >> $GITHUB_STEP_SUMMARY
          echo "| 📋 Registration Numbers | $(grep -c '^[0-9]' registration_numbers.txt 2>/dev/null || echo '0') |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔄 Next Scheduled Run | $(date -u -d '+5 minutes' '+%Y-%m-%d %H:%M:%S UTC' 2>/dev/null || echo 'In 5 minutes') |" >> $GITHUB_STEP_SUMMARY
          echo "## 🎯 Bot Status" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **Registration file found**" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 **Monitoring active**: Checking every ${{ github.event.inputs.check_interval || '30' }} seconds" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 **Discord notifications**: Real-time updates sent" >> $GITHUB_STEP_SUMMARY
